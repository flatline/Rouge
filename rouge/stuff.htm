<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" >
  <head>
	<title>Items - Rouge</title>
	
	<script type="text/javascript" src="scripts/jquery-1.3.2.min.js"></script>
	<script type="text/javascript" src="scripts/jquery-json.min.js" ></script>
	<script type="text/javascript" src="scripts/common.js"></script>
	<script type="text/javascript" src="scripts/main.js"></script>
	<script type="text/javascript" src="scripts/controller.js"></script>
	<script type="text/javascript" src="scripts/actors.js"></script>	
	<script type="text/javascript" src="scripts/player.js"></script> 
	<script type="text/javascript" src="scripts/npc.js"></script>
	<script type="text/javascript" src="scripts/frame.js"></script>
	<script type="text/javascript" src="scripts/gamestorage.js"></script>
	<script type="text/javascript" src="scripts/fov.js"></script>	
	<script type="text/javascript" src="scripts/imageTable.js"></script>
	<script type="text/javascript" src="scripts/view.js"></script>
	<script type="text/javascript" src="scripts/pickler.js"></script>
	<script type="text/javascript" src="scripts/items.js"></script>
	<script type="text/javascript">

    function newMap() {
		var map = new Map();
		map.init(30,30);

		//alternate light/dark tiles on each row
		for (var i = 0; i < 30; i++) {
			// for (var j = 0; j < 30; j+=2) {
			// 	map.poke({ repr: "grounds:0,4", "static" : true },  i, j + i%2);
			// 	map.poke({ repr: "grounds:0,3", "static" : true }, i, j + (i%2 ? 0 : 1));
			// }
			for (var j = 0; j < 30; j++) {
				map.poke({ repr: "grounds:0,4", "static" : true },  i, j);
			}
		}

		var shrooms = ["shroom_red", "shroom_blue", "shroom_orange", "shroom_brown", "shroom_green"];
		var weapons = ["longsword", "shortsword", "broadsword", "greatsword"];

		for (var i = 0; i < 30; i++) {
			map.poke(FoodBuilder.build(shrooms[Math.floor(Math.random() * shrooms.length)]), Math.floor(Math.random() * 30), Math.floor(Math.random() * 30));
		}

		for (var i = 0; i < 4; i++) {
			map.poke(WeaponBuilder.build(weapons[Math.floor(Math.random() * weapons.length)]), Math.floor(Math.random() * 30), Math.floor(Math.random() * 30));
		}

		var player = new Player();
		map.player = player;
		map.poke(player, 15, 15);
		
		return map;
    }

    function newGameController() {
		var map = newMap();
		
		var controller = new Controller(map);
		
		return controller;
	}

    $(".gameLink").live("click", function(evt) {
		var key = $(evt.target).attr("data-gamekey");
		var controller;
		if (key == "new") {
			controller = newGameController();
		} else {
			controller = gameStorage.loadGame(key);
		}
		
		$("#gameList").hide();
		
		var view = new HtmlMapView(controller);
		view.init();
		evt.stopPropagation();
		return false;
	});

    $(document).ready(function() {
		var gameList = $("#gameList");
		var games = gameStorage.listGames();
		for (var i = 0; i < games.length; i++) {
			gameList.append('<li><a class="gameLink" data-gamekey="' + games[i] + '" href="#">' + games[i] + '</a></li>');
		}
	});
</script>
	
	<style type="text/css">
		canvas
		{
			border: 1px solid black;
		}
	</style>
</head>
<body>
	<ul id="gameList">
		<li><a class="gameLink" data-gamekey="new" href="#">New Game</a></li>
	</ul>
</body>
</html>
